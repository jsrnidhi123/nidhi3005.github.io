// Portfolio JavaScript functionality

document.addEventListener('DOMContentLoaded', function() {
    // Smooth scrolling for navigation links
    const navLinks = document.querySelectorAll('.nav-link[href^="#"]');
    
    navLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            
            const targetId = this.getAttribute('href').substring(1);
            const targetSection = document.getElementById(targetId);
            
            if (targetSection) {
                const navbar = document.querySelector('.navbar');
                const navbarHeight = navbar.offsetHeight;
                const targetPosition = targetSection.offsetTop - navbarHeight - 20;
                
                window.scrollTo({
                    top: targetPosition,
                    behavior: 'smooth'
                });
                
                // Close mobile menu if open
                const navbarToggle = document.querySelector('.navbar-toggler');
                const navbarCollapse = document.querySelector('.navbar-collapse');
                if (navbarCollapse.classList.contains('show')) {
                    navbarToggle.click();
                }
            }
        });
    });

    // Navbar background change on scroll
    const navbar = document.querySelector('.navbar');
    
    function updateNavbarBackground() {
        if (window.scrollY > 50) {
            navbar.style.backgroundColor = 'rgba(var(--color-surface-rgb, 255, 255, 253), 0.95)';
            navbar.style.boxShadow = 'var(--shadow-md)';
        } else {
            navbar.style.backgroundColor = 'var(--color-surface)';
            navbar.style.boxShadow = 'none';
        }
    }
    
    window.addEventListener('scroll', updateNavbarBackground);
    updateNavbarBackground(); // Initial call

    // Active navigation highlighting
    function highlightActiveSection() {
        const sections = document.querySelectorAll('section[id]');
        const navLinks = document.querySelectorAll('.nav-link[href^="#"]');
        
        let currentSection = '';
        const scrollPosition = window.scrollY + 100;
        
        sections.forEach(section => {
            const sectionTop = section.offsetTop;
            const sectionHeight = section.offsetHeight;
            
            if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
                currentSection = section.getAttribute('id');
            }
        });
        
        navLinks.forEach(link => {
            link.classList.remove('active');
            if (link.getAttribute('href') === `#${currentSection}`) {
                link.classList.add('active');
            }
        });
    }
    
    window.addEventListener('scroll', highlightActiveSection);
    highlightActiveSection(); // Initial call

    // Enhanced collapse functionality for both work experience and leadership sections
    const toggleButtons = document.querySelectorAll('.toggle-details');
    
    toggleButtons.forEach(button => {
        const targetId = button.getAttribute('data-bs-target');
        const targetElement = document.querySelector(targetId);
        
        if (targetElement) {
            // Listen for Bootstrap collapse events
            targetElement.addEventListener('show.bs.collapse', function() {
                const icon = button.querySelector('i');
                icon.className = 'fas fa-chevron-up';
                button.innerHTML = '<i class="fas fa-chevron-up"></i> Hide Details';
                button.setAttribute('aria-expanded', 'true');
            });
            
            targetElement.addEventListener('hide.bs.collapse', function() {
                const icon = button.querySelector('i');
                icon.className = 'fas fa-chevron-down';
                button.innerHTML = '<i class="fas fa-chevron-down"></i> View Details';
                button.setAttribute('aria-expanded', 'false');
            });

            // Handle the transition states
            targetElement.addEventListener('shown.bs.collapse', function() {
                button.classList.add('expanded');
            });
            
            targetElement.addEventListener('hidden.bs.collapse', function() {
                button.classList.remove('expanded');
            });
        }
    });

    // Scroll-triggered animations
    function isElementInViewport(el) {
        const rect = el.getBoundingClientRect();
        const windowHeight = window.innerHeight || document.documentElement.clientHeight;
        return (
            rect.top >= -100 &&
            rect.top <= windowHeight - 100
        );
    }

    function addScrollAnimations() {
        const animatedElements = document.querySelectorAll(
            '.experience-item, .skills-card, .certification-card, .card'
        );
        
        function checkAnimation() {
            animatedElements.forEach((element, index) => {
                if (isElementInViewport(element) && !element.classList.contains('animated')) {
                    setTimeout(() => {
                        element.style.opacity = '1';
                        element.style.transform = 'translateY(0)';
                        element.classList.add('animated');
                    }, index % 4 * 100); // Stagger animation for cards in the same row
                }
            });
        }
        
        // Set initial state
        animatedElements.forEach(element => {
            element.style.opacity = '0';
            element.style.transform = 'translateY(30px)';
            element.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        });
        
        window.addEventListener('scroll', checkAnimation);
        checkAnimation(); // Initial call
    }

    // Skills tag interaction
    function addSkillsInteraction() {
        const skillTags = document.querySelectorAll('.skill-tag');
        
        skillTags.forEach(tag => {
            tag.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-2px) scale(1.05)';
            });
            
            tag.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0) scale(1)';
            });
        });
    }

    // Certification card enhanced interactions
    function addCertificationInteractions() {
        const certCards = document.querySelectorAll('.certification-card');
        
        certCards.forEach(card => {
            const btn = card.querySelector('.btn');
            
            card.addEventListener('mouseenter', function() {
                const logo = this.querySelector('.cert-logo i');
                if (logo) {
                    logo.style.transform = 'scale(1.2) rotate(5deg)';
                }
            });
            
            card.addEventListener('mouseleave', function() {
                const logo = this.querySelector('.cert-logo i');
                if (logo) {
                    logo.style.transform = 'scale(1) rotate(0deg)';
                }
            });

            // Add click tracking for analytics (placeholder)
            if (btn) {
                btn.addEventListener('click', function(e) {
                    console.log(`Certification credential clicked: ${card.querySelector('.cert-title').textContent}`);
                });
            }
        });
    }

    // Initialize all interactions after a short delay
    setTimeout(() => {
        addScrollAnimations();
        addSkillsInteraction();
        addCertificationInteractions();
    }, 100);

    // Ensure external links work properly
    const externalLinks = document.querySelectorAll('a[href^="http"], a[href^="mailto:"]');
    externalLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            // Don't prevent default - let the browser handle the navigation
            console.log(`External link clicked: ${this.href}`);
        });
    });

    // Keyboard navigation support
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            // Close any open modals or dropdowns
            const openCollapses = document.querySelectorAll('.collapse.show');
            openCollapses.forEach(collapse => {
                const toggleButton = document.querySelector(`[data-bs-target="#${collapse.id}"]`);
                if (toggleButton) {
                    toggleButton.click();
                }
            });
        }

        // Allow keyboard navigation through skill tags
        if (e.key === 'Tab') {
            const skillTags = document.querySelectorAll('.skill-tag');
            skillTags.forEach(tag => {
                if (!tag.hasAttribute('tabindex')) {
                    tag.setAttribute('tabindex', '0');
                }
            });
        }
    });

    // Performance optimization for scroll events
    let ticking = false;
    
    function optimizedScrollHandler() {
        if (!ticking) {
            requestAnimationFrame(function() {
                highlightActiveSection();
                updateNavbarBackground();
                ticking = false;
            });
            ticking = true;
        }
    }
    
    // Replace the individual scroll listeners with the optimized version
    window.removeEventListener('scroll', highlightActiveSection);
    window.removeEventListener('scroll', updateNavbarBackground);
    window.addEventListener('scroll', optimizedScrollHandler);

    // Initialize tooltips if Bootstrap tooltips are used
    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    if (typeof bootstrap !== 'undefined' && bootstrap.Tooltip) {
        tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    }

    // Add loading state management
    window.addEventListener('load', function() {
        document.body.classList.add('loaded');
        
        // Fade in animations for hero section
        const heroElements = document.querySelectorAll(
            '.hero-section .profile-image, .hero-section h1, .hero-section .lead, .hero-section .social-links'
        );
        heroElements.forEach((element, index) => {
            setTimeout(() => {
                element.style.opacity = '1';
                element.style.transform = 'translateY(0)';
            }, index * 200);
        });
    });

    // Set initial state for hero animations
    const heroElements = document.querySelectorAll(
        '.hero-section .profile-image, .hero-section h1, .hero-section .lead, .hero-section .social-links'
    );
    heroElements.forEach(element => {
        element.style.opacity = '0';
        element.style.transform = 'translateY(30px)';
        element.style.transition = 'opacity 0.8s ease, transform 0.8s ease';
    });

    // Add intersection observer for better performance on scroll animations
    if ('IntersectionObserver' in window) {
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver(function(entries) {
            entries.forEach(entry => {
                if (entry.isIntersecting && !entry.target.classList.contains('animated')) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                    entry.target.classList.add('animated');
                }
            });
        }, observerOptions);

        // Observe all animated elements
        document.querySelectorAll('.experience-item, .skills-card, .certification-card').forEach(el => {
            observer.observe(el);
        });
    }

    // Add smooth reveal for section titles
    const sectionTitles = document.querySelectorAll('.section-title');
    sectionTitles.forEach(title => {
        title.style.opacity = '0';
        title.style.transform = 'translateY(20px)';
        title.style.transition = 'opacity 0.8s ease, transform 0.8s ease';
    });

    // Reveal section titles when they come into view
    if ('IntersectionObserver' in window) {
        const titleObserver = new IntersectionObserver(function(entries) {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                }
            });
        }, { threshold: 0.5 });

        sectionTitles.forEach(title => {
            titleObserver.observe(title);
        });
    } else {
        // Fallback for browsers without IntersectionObserver
        sectionTitles.forEach(title => {
            title.style.opacity = '1';
            title.style.transform = 'translateY(0)';
        });
    }

    // Add accessibility improvements
    function improveAccessibility() {
        // Add aria-labels to skill tags
        document.querySelectorAll('.skill-tag').forEach(tag => {
            tag.setAttribute('aria-label', `Skill: ${tag.textContent}`);
            tag.setAttribute('role', 'button');
            tag.setAttribute('tabindex', '0');
        });

        // Add aria-labels to certification links
        document.querySelectorAll('.certification-card .btn').forEach(btn => {
            const certTitle = btn.closest('.certification-card').querySelector('.cert-title').textContent;
            btn.setAttribute('aria-label', `View credential for ${certTitle}`);
        });

        // Improve toggle button accessibility
        document.querySelectorAll('.toggle-details').forEach(btn => {
            const target = btn.getAttribute('data-bs-target');
            const targetElement = document.querySelector(target);
            if (targetElement) {
                btn.setAttribute('aria-controls', target.substring(1));
                btn.setAttribute('aria-expanded', 'false');
            }
        });
    }

    // Initialize accessibility improvements
    improveAccessibility();

    // Add custom focus management for better keyboard navigation
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Enter' || e.key === ' ') {
            if (e.target.classList.contains('skill-tag')) {
                e.preventDefault();
                e.target.click();
            }
        }
    });
});

// Add utility function for debugging
window.portfolioUtils = {
    scrollToSection: function(sectionId) {
        const section = document.getElementById(sectionId);
        if (section) {
            const navbar = document.querySelector('.navbar');
            const navbarHeight = navbar.offsetHeight;
            const targetPosition = section.offsetTop - navbarHeight - 20;
            
            window.scrollTo({
                top: targetPosition,
                behavior: 'smooth'
            });
        }
    },
    
    toggleAllExperience: function() {
        document.querySelectorAll('.toggle-details').forEach(btn => {
            btn.click();
        });
    },
    
    getVisibleSection: function() {
        const sections = document.querySelectorAll('section[id]');
        const scrollPosition = window.scrollY + 100;
        
        for (let section of sections) {
            const sectionTop = section.offsetTop;
            const sectionHeight = section.offsetHeight;
            
            if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
                return section.getAttribute('id');
            }
        }
        return null;
    }
};
